---
swagger: '2.0'
info:
  title: Railway-API
  version: v1
  description: Railway-API documentation
paths:
  "/api/v1/carriages/{carriage_id}":
    get:
      summary: Get concrete carriage. By necr0me
      tags:
      - Carriages
      parameters:
      - name: carriage_id
        in: path
        type: integer
        required: true
        description: Id of carriage that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Carriage found
          examples:
            application/json:
              carriage:
                data:
                  id: '16597'
                  type: carriage
                  attributes:
                    name: Demeter
                    capacity: 8
                    carriage_type_id: 21292
                    order_number: '28'
                    available: true
                    type: Lake Speed
                  relationships:
                    seats:
                      data: []
                included: []
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '404':
          description: Carriage not found
          examples:
            application/json:
              message: Couldn't find Carriage with 'id'=-1
  api/v1/passing_trains:
    get:
      summary: Retrieves all passing trains. By necr0me
      tags:
      - Passing trains
      produces:
      - application/json
      responses:
        '200':
          description: Passing trains found
          examples:
            application/json:
              found_trains:
                data:
                  departure_station:
                    id: ''
                    attributes:
                      name: 
                  arrival_station:
                    id: ''
                    attributes:
                      name: 
                  trains:
                  - id: 11525
                    attributes:
                      destination: 
                      departs_at: '2023-04-27T13:47:03.405Z'
                      arrives_at: '2023-04-27T14:07:03.414Z'
                      travel_time: 1200.008661
  "/api/v1/profiles":
    get:
      summary: Retrieves user profiles. By necr0me
      tags:
      - Profiles
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profiles found
          examples:
            application/json:
              profiles:
              - id: 1665
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                passport_code: KH1234567
                user_id: 28384
                created_at: '2023-04-27T13:27:03.440Z'
                updated_at: '2023-04-27T13:27:03.440Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are foribdden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    post:
      summary: Creates user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Profile successfully created
          examples:
            application/json:
              message: Profile successfully created
              profile:
                id: 1667
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                passport_code: KH1234567
                user_id: 28386
                created_at: '2023-04-27T13:27:03.469Z'
                updated_at: '2023-04-27T13:27:03.469Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile create
          examples:
            application/json:
              message: Something went wrong
              errors:
                surname:
                - can't be blank
                - is too short (minimum is 2 characters)
                patronymic:
                - can't be blank
                - is too short (minimum is 5 characters)
                phone_number:
                - can't be blank
                - is too short (minimum is 7 characters)
                passport_code:
                - can't be blank
                - is invalid
                name:
                - is too short (minimum is 2 characters)
  "/api/v1/profiles/{profile_id}":
    put:
      summary: Updates concrete user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to update
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile found
          examples:
            application/json:
              message: Profile successfully updated
              profile:
                name: New name
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                id: 1668
                passport_code: KH1234567
                user_id: 28388
                created_at: '2023-04-27T13:27:03.494Z'
                updated_at: '2023-04-27T13:27:03.501Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile update
          examples:
            application/json:
              message: Something went wrong
              errors:
                name:
                - is too short (minimum is 2 characters)
    delete:
      summary: Deletes concrete user profile. By necr0me
      tags:
      - Profiles
      parameters:
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to delete
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile successfully destroyed
          examples:
            application/json:
              message: Profile successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during profile destroy
          examples:
            application/json:
              message: Something went wrong
              errors: {}
  "/api/v1/stations":
    get:
      summary: Gets all stations. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station
        in: query
        type: string
        required: false
        description: Name of station or first N letters of station name
      responses:
        '200':
          description: Stations found (From query "?station=Mo")
          examples:
            application/json:
              stations:
              - id: 28983
                name: Mogilev
                created_at: '2023-04-27T13:27:03.579Z'
                updated_at: '2023-04-27T13:27:03.579Z'
              - id: 28984
                name: Mosty
                created_at: '2023-04-27T13:27:03.581Z'
                updated_at: '2023-04-27T13:27:03.581Z'
              pages: 1
  "/api/v1/stations/{station_id}":
    get:
      summary: Get concrete station. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station_id
        in: path
        type: string
        required: true
        description: Id of station
      responses:
        '200':
          description: Station was found
          examples:
            application/json:
              id: 28986
              name: Melbourne
              created_at: '2023-04-27T13:27:03.594Z'
              updated_at: '2023-04-27T13:27:03.594Z'
        '404':
          description: Station not found
          examples:
            application/json:
              message: Couldn't find Station with 'id'=-1
  "/api/v1/tickets":
    post:
      summary: Creates new ticket. By necr0me
      tags:
      - Tickets
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            ticket:
              type: object
              properties:
                user_id:
                  type: integer
                seat_id:
                  type: integer
                departure_station_id:
                  type: integer
                arrival_station_id:
                  type: integer
                price:
                  type: number
                  format: float
              required:
              - user_id
              - seat_id
              - departure_station_id
              - arrival_station_id
              - price
              example:
                user_id: 1
                seat_id: 1
                departure_station_id: 1
                arrival_station_id: 2
                price: 10.0
            required:
            - ticket
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Ticket successfully created
          examples:
            application/json:
              message: Ticket successfully created
              ticket:
                id: 2684
                price: 10.0
                user_id: 28396
                seat_id: 54520
                arrival_station_id: 28988
                departure_station_id: 28987
                created_at: '2023-04-27T13:27:03.625Z'
                updated_at: '2023-04-27T13:27:03.625Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during ticket create
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Price can't be blank
              - Price is not a number
  "/api/v1/tickets/{ticket_id}":
    get:
      summary: Gets concrete ticket. By necr0me
      tags:
      - Tickets
      security:
      - Bearer: {}
      parameters:
      - name: ticket_id
        in: path
        type: integer
        required: true
        description: Id of ticket that you want to find
      produces:
      - application/json
      responses:
        '200':
          description: Ticket was found
          examples:
            application/json:
              ticket:
                id: 2685
                price: 1.5
                user_id: 28399
                seat_id: 54523
                arrival_station_id: 28993
                departure_station_id: 28993
                created_at: '2023-04-27T13:27:03.682Z'
                updated_at: '2023-04-27T13:27:03.682Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Ticket not found
          examples:
            application/json:
              message: Couldn't find Ticket with 'id'=-1
    delete:
      summary: Deletes concrete ticket. By necr0me
      tags:
      - Tickets
      security:
      - Bearer: {}
      parameters:
      - name: ticket_id
        in: path
        type: integer
        required: true
        description: Id of ticket that you want to destroy
      produces:
      - application/json
      responses:
        '200':
          description: Ticket successfully destroyed
          examples:
            application/json:
              message: Ticket successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Ticket not found
          examples:
            application/json:
              message: Couldn't find Ticket with 'id'=-1
        '422':
          description: Error occurred during ticket destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/api/v1/trains/{train_id}":
    get:
      summary: Show concrete train. By necr0me
      tags:
      - Trains
      parameters:
      - name: train_id
        in: path
        type: integer
        required: true
        description: Id of train that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Train found
          examples:
            application/json:
              train:
                data:
                  id: '11526'
                  type: train
                  attributes:
                    destination: No destination
                  relationships:
                    carriages:
                      data:
                      - id: '16609'
                        type: carriage
                      - id: '16610'
                        type: carriage
                      - id: '16611'
                        type: carriage
                    stops:
                      data: []
                    route:
                      data: 
                included:
                - id: '16609'
                  type: carriage
                  attributes:
                    name: Apollo
                    capacity: 8
                    carriage_type_id: 21304
                    order_number: '01'
                    available: false
                    type: Crystal Ball
                  relationships:
                    seats:
                      data:
                      - id: '54530'
                        type: seat
                      - id: '54531'
                        type: seat
                      - id: '54532'
                        type: seat
                      - id: '54533'
                        type: seat
                      - id: '54534'
                        type: seat
                      - id: '54535'
                        type: seat
                      - id: '54536'
                        type: seat
                      - id: '54537'
                        type: seat
                - id: '16610'
                  type: carriage
                  attributes:
                    name: Hestia
                    capacity: 8
                    carriage_type_id: 21305
                    order_number: '02'
                    available: false
                    type: Kenny Dewitt
                  relationships:
                    seats:
                      data:
                      - id: '54538'
                        type: seat
                      - id: '54539'
                        type: seat
                      - id: '54540'
                        type: seat
                      - id: '54541'
                        type: seat
                      - id: '54542'
                        type: seat
                      - id: '54543'
                        type: seat
                      - id: '54544'
                        type: seat
                      - id: '54545'
                        type: seat
                - id: '16611'
                  type: carriage
                  attributes:
                    name: Aphrodite
                    capacity: 8
                    carriage_type_id: 21306
                    order_number: '03'
                    available: false
                    type: Justin Thyme
                  relationships:
                    seats:
                      data:
                      - id: '54546'
                        type: seat
                      - id: '54547'
                        type: seat
                      - id: '54548'
                        type: seat
                      - id: '54549'
                        type: seat
                      - id: '54550'
                        type: seat
                      - id: '54551'
                        type: seat
                      - id: '54552'
                        type: seat
                      - id: '54553'
                        type: seat
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Train not found
          examples:
            application/json:
              message: Couldn't find Train with 'id'=-1
  "/api/v1/users/{user_id}":
    get:
      summary: Retrieves concrete user. By necr0me
      tags:
      - Users
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: User found
          examples:
            application/json:
              user:
                id: 28413
                email: johndoe@gmail.com
                password_digest: "$2a$04$Zyh8caenTMs7zhiGoz.Wc..dbbfd2i0LqM5rYyLPL36KikdaxR6WW"
                created_at: '2023-04-27T13:27:04.066Z'
                updated_at: '2023-04-27T13:27:04.066Z'
                role: admin
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    put:
      summary: Updates user password. By necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that updates password (ANY user can update only his
          own password)
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                password:
                  type: string
              required:
              - password
              example:
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: User found
          examples:
            application/json:
              message: You have successfully updated your credentials
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during update
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Password can't be blank
              - Password is too short (minimum is 7 characters)
  "/users/sign_up":
    post:
      summary: Register new user. By necr0me
      tags:
      - Registrations
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: User successfully created
          examples:
            application/json:
              message: You have successfully registered
        '422':
          description: Error occurred during user registration
          examples:
            application/json:
              errors:
                email:
                - can't be blank
                - is invalid
                password:
                - can't be blank
                - is too short (minimum is 7 characters)
  "/users/{user_id}":
    delete:
      summary: Destroy user. By necr0me
      tags:
      - Registrations
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that destroys account (user can destroy only own account
          unless role is admin)
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '204':
          description: User successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: User not found
          examples:
            application/json:
              message: Couldn't find User with 'id'=-1
        '422':
          description: Error occurred during user destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/users/login":
    post:
      summary: Authenticates user. By necr0me
      tags:
      - Authentication
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: Authenticated successfully
          examples:
            application/json:
              message: You have successfully logged in
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyODQyOSwiZXhwIjoxNjgyNjAzODI0LCJpYXQiOjE2ODI2MDIwMjR9.RFBS75X7MvowDLuK40n_CGgilFFqd9mYgta7Pc8cFec
        '400':
          description: Error occurred during authentication
          examples:
            application/json:
              message: Something went wrong
              errors:
                email:
                - Can't find user with such email
  "/users/refresh_tokens":
    get:
      summary: Refreshes access and refresh tokens. By necr0me
      tags:
      - Authentication
      produces:
      - application/json
      responses:
        '200':
          description: Tokens successfully updated
          examples:
            application/json:
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyODQzMSwiZXhwIjoxNjgyNjAzODI0LCJpYXQiOjE2ODI2MDIwMjR9.tJC8l5tmhCxvEIoOO4KbbwefvfhZ3LeEYEXfy3HLd5I
        '401':
          description: Error occurred during tokens update
          examples:
            application/json:
              errors:
              - Nil JSON web token
  "/users/logout":
    delete:
      summary: Logouts user. By necr0me
      tags:
      - Authentication
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
        description: 'Authorization header of user that logout. Header looks like
          this: ''Bearer <access-token>'''
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Successful logout
          examples:
            application/json:
              message: You have successfully logged out.
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
securityDefinitions:
  Bearer:
    description: Authorization header (JWT-token)
    type: apiKey
    name: Authorization
    in: header
servers:
- url: http://{defaultHost}/
  variables:
    defaultHost:
      default: localhost:3000
