---
swagger: '2.0'
info:
  title: Railway-API
  version: v1
  description: Railway-API documentation
paths:
  "/api/v1/carriages/{carriage_id}":
    get:
      summary: Get concrete carriage. By necr0me
      tags:
      - Carriages
      parameters:
      - name: carriage_id
        in: path
        type: integer
        required: true
        description: Id of carriage that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Carriage found
          examples:
            application/json:
              carriage:
                data:
                  id: '3354'
                  type: carriage
                  attributes:
                    name: Athena
                    capacity: 8
                    carriage_type_id: 4096
                    order_number: '31'
                    available: true
                    type: Sarah Bellum
                  relationships:
                    seats:
                      data: []
                included: []
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '404':
          description: Carriage not found
          examples:
            application/json:
              message: Couldn't find Carriage with 'id'=-1
  api/v1/passing_trains:
    get:
      summary: Retrieves all passing trains. By necr0me
      tags:
      - Passing trains
      produces:
      - application/json
      responses:
        '200':
          description: Passing trains found
          examples:
            application/json:
              found_trains:
                data:
                  departure_station:
                    id: ''
                    attributes:
                      name: 
                  arrival_station:
                    id: ''
                    attributes:
                      name: 
                  trains:
                  - id: 1984
                    attributes:
                      destination: 
                      departs_at: '2023-04-28T12:06:06.234Z'
                      arrives_at: '2023-04-28T12:26:06.244Z'
                      travel_time: 1200.009775
  "/api/v1/profiles":
    get:
      summary: Retrieves user profiles. By necr0me
      tags:
      - Profiles
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profiles found
          examples:
            application/json:
              profiles:
              - id: 1477
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                passport_code: KH1234567
                user_id: 5877
                created_at: '2023-04-28T11:46:06.268Z'
                updated_at: '2023-04-28T11:46:06.268Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are foribdden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    post:
      summary: Creates user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Profile successfully created
          examples:
            application/json:
              message: Profile successfully created
              profile:
                id: 1479
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                passport_code: KH1234567
                user_id: 5879
                created_at: '2023-04-28T11:46:06.301Z'
                updated_at: '2023-04-28T11:46:06.301Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile create
          examples:
            application/json:
              message: Something went wrong
              errors:
                surname:
                - can't be blank
                - is too short (minimum is 2 characters)
                patronymic:
                - can't be blank
                - is too short (minimum is 5 characters)
                phone_number:
                - can't be blank
                - is too short (minimum is 7 characters)
                passport_code:
                - can't be blank
                - is invalid
                name:
                - is too short (minimum is 2 characters)
  "/api/v1/profiles/{profile_id}":
    put:
      summary: Updates concrete user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to update
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile found
          examples:
            application/json:
              message: Profile successfully updated
              profile:
                name: New name
                surname: Doe
                patronymic: Doehovich
                phone_number: "+375331234567"
                id: 1480
                passport_code: KH1234567
                user_id: 5881
                created_at: '2023-04-28T11:46:06.329Z'
                updated_at: '2023-04-28T11:46:06.337Z'
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile update
          examples:
            application/json:
              message: Something went wrong
              errors:
                name:
                - is too short (minimum is 2 characters)
    delete:
      summary: Deletes concrete user profile. By necr0me
      tags:
      - Profiles
      parameters:
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to delete
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile successfully destroyed
          examples:
            application/json:
              message: Profile successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during profile destroy
          examples:
            application/json:
              message: Something went wrong
              errors: {}
  "/api/v1/stations":
    get:
      summary: Gets all stations. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station
        in: query
        type: string
        required: false
        description: Name of station or first N letters of station name
      responses:
        '200':
          description: Stations found (From query "?station=Mo")
          examples:
            application/json:
              stations:
              - id: 5392
                name: Mogilev
                created_at: '2023-04-28T11:46:06.440Z'
                updated_at: '2023-04-28T11:46:06.440Z'
              - id: 5393
                name: Mosty
                created_at: '2023-04-28T11:46:06.443Z'
                updated_at: '2023-04-28T11:46:06.443Z'
              pages: 1
  "/api/v1/stations/{station_id}":
    get:
      summary: Get concrete station. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station_id
        in: path
        type: string
        required: true
        description: Id of station
      responses:
        '200':
          description: Station was found
          examples:
            application/json:
              id: 5395
              name: Melbourne
              created_at: '2023-04-28T11:46:06.458Z'
              updated_at: '2023-04-28T11:46:06.458Z'
        '404':
          description: Station not found
          examples:
            application/json:
              message: Couldn't find Station with 'id'=-1
  "/api/v1/tickets":
    get:
      summary: Retrieves user's tickets. By necr0me
      tags:
      - Tickets
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Tickets found
          examples:
            application/json:
              tickets:
              - id: 663
                price: 1.5
                seat_id: 9810
                arrival_station_id: 5396
                departure_station_id: 5396
                created_at: '2023-04-28T11:46:06.490Z'
                updated_at: '2023-04-28T11:46:06.490Z'
                profile_id: 1487
              - id: 664
                price: 1.5
                seat_id: 9810
                arrival_station_id: 5396
                departure_station_id: 5396
                created_at: '2023-04-28T11:46:06.495Z'
                updated_at: '2023-04-28T11:46:06.495Z'
                profile_id: 1487
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    post:
      summary: Creates new tickets. By necr0me
      tags:
      - Tickets
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            tickets:
              type: object
              properties:
                departure_station_id:
                  type: integer
                arrival_station_id:
                  type: integer
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      profile_id:
                        type: integer
                      seat_id:
                        type: integer
                      price:
                        type: number
                        format: float
                    required:
                    - profile_id
                    - seat_id
                    - price
              required:
              - departure_station_id
              - arrival_station_id
              - passengers
              example:
                departure_station_id: 1
                arrival_station_id: 2
                passengers:
                - profile_id: 1
                  seat_id: 1
                  price: 10.0
                - profile_id: 2
                  seat_id: 2
                  price: 10.0
          required:
          - tickets
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Tickets successfully created
          examples:
            application/json:
              message: Tickets successfully created
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during tickets create
          examples:
            application/json:
              message: Something went wrong
              errors:
              - 'Validation failed: Price can''t be blank, Price is not a number'
  "/api/v1/tickets/{ticket_id}":
    delete:
      summary: Deletes concrete ticket. By necr0me
      tags:
      - Tickets
      security:
      - Bearer: {}
      parameters:
      - name: ticket_id
        in: path
        type: integer
        required: true
        description: Id of ticket that you want to destroy
      produces:
      - application/json
      responses:
        '200':
          description: Ticket successfully destroyed
          examples:
            application/json:
              message: Ticket successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Ticket not found
          examples:
            application/json:
              message: Couldn't find Ticket with 'id'=-1
        '422':
          description: Error occurred during ticket destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/api/v1/trains/{train_id}":
    get:
      summary: Show concrete train. By necr0me
      tags:
      - Trains
      parameters:
      - name: train_id
        in: path
        type: integer
        required: true
        description: Id of train that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Train found
          examples:
            application/json:
              train:
                data:
                  id: '1985'
                  type: train
                  attributes:
                    destination: No destination
                  relationships:
                    carriages:
                      data:
                      - id: '3371'
                        type: carriage
                      - id: '3372'
                        type: carriage
                      - id: '3373'
                        type: carriage
                    stops:
                      data: []
                    route:
                      data: 
                included:
                - id: '3371'
                  type: carriage
                  attributes:
                    name: Zeus
                    capacity: 8
                    carriage_type_id: 4113
                    order_number: '01'
                    available: false
                    type: Chip Munk
                  relationships:
                    seats:
                      data:
                      - id: '9825'
                        type: seat
                      - id: '9826'
                        type: seat
                      - id: '9827'
                        type: seat
                      - id: '9828'
                        type: seat
                      - id: '9829'
                        type: seat
                      - id: '9830'
                        type: seat
                      - id: '9831'
                        type: seat
                      - id: '9832'
                        type: seat
                - id: '3372'
                  type: carriage
                  attributes:
                    name: Hades
                    capacity: 8
                    carriage_type_id: 4114
                    order_number: '02'
                    available: false
                    type: Anne Teak
                  relationships:
                    seats:
                      data:
                      - id: '9833'
                        type: seat
                      - id: '9834'
                        type: seat
                      - id: '9835'
                        type: seat
                      - id: '9836'
                        type: seat
                      - id: '9837'
                        type: seat
                      - id: '9838'
                        type: seat
                      - id: '9839'
                        type: seat
                      - id: '9840'
                        type: seat
                - id: '3373'
                  type: carriage
                  attributes:
                    name: Artemis
                    capacity: 8
                    carriage_type_id: 4115
                    order_number: '03'
                    available: false
                    type: Homan Provement
                  relationships:
                    seats:
                      data:
                      - id: '9841'
                        type: seat
                      - id: '9842'
                        type: seat
                      - id: '9843'
                        type: seat
                      - id: '9844'
                        type: seat
                      - id: '9845'
                        type: seat
                      - id: '9846'
                        type: seat
                      - id: '9847'
                        type: seat
                      - id: '9848'
                        type: seat
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Train not found
          examples:
            application/json:
              message: Couldn't find Train with 'id'=-1
  "/api/v1/users/{user_id}":
    get:
      summary: Retrieves concrete user. By necr0me
      tags:
      - Users
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: User found
          examples:
            application/json:
              user:
                id: 5905
                email: johndoe@gmail.com
                password_digest: "$2a$04$HViKU.ICup96nwjKSKs/gORc0L3F/Y.JTVeRr946iNRkQDzgEBy8C"
                created_at: '2023-04-28T11:46:07.083Z'
                updated_at: '2023-04-28T11:46:07.083Z'
                role: user
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    put:
      summary: Updates user password. By necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that updates password (ANY user can update only his
          own password)
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                password:
                  type: string
              required:
              - password
              example:
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: User found
          examples:
            application/json:
              message: You have successfully updated your credentials
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during update
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Password can't be blank
              - Password is too short (minimum is 7 characters)
  "/users/sign_up":
    post:
      summary: Register new user. By necr0me
      tags:
      - Registrations
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: User successfully created
          examples:
            application/json:
              message: You have successfully registered
        '422':
          description: Error occurred during user registration
          examples:
            application/json:
              errors:
                email:
                - can't be blank
                - is invalid
                password:
                - can't be blank
                - is too short (minimum is 7 characters)
  "/users/{user_id}":
    delete:
      summary: Destroy user. By necr0me
      tags:
      - Registrations
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that destroys account (user can destroy only own account
          unless role is admin)
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '204':
          description: User successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: User not found
          examples:
            application/json:
              message: Couldn't find User with 'id'=-1
        '422':
          description: Error occurred during user destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/users/login":
    post:
      summary: Authenticates user. By necr0me
      tags:
      - Authentication
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: Authenticated successfully
          examples:
            application/json:
              message: You have successfully logged in
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1OTIxLCJleHAiOjE2ODI2ODQxNjcsImlhdCI6MTY4MjY4MjM2N30.eUlb_QeF89p4JrZ_I8f9bD8aLhdG4SuIs6ybS6GS3bQ
        '400':
          description: Error occurred during authentication
          examples:
            application/json:
              message: Something went wrong
              errors:
                email:
                - Can't find user with such email
  "/users/refresh_tokens":
    get:
      summary: Refreshes access and refresh tokens. By necr0me
      tags:
      - Authentication
      produces:
      - application/json
      responses:
        '200':
          description: Tokens successfully updated
          examples:
            application/json:
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1OTIzLCJleHAiOjE2ODI2ODQxNjcsImlhdCI6MTY4MjY4MjM2N30.0VaEd_0Cok4o22ZjbuAWA97mFPxCMCeKDqC8yXQ_wTs
        '401':
          description: Error occurred during tokens update
          examples:
            application/json:
              errors:
              - Nil JSON web token
  "/users/logout":
    delete:
      summary: Logouts user. By necr0me
      tags:
      - Authentication
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
        description: 'Authorization header of user that logout. Header looks like
          this: ''Bearer <access-token>'''
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Successful logout
          examples:
            application/json:
              message: You have successfully logged out.
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
securityDefinitions:
  Bearer:
    description: Authorization header (JWT-token)
    type: apiKey
    name: Authorization
    in: header
servers:
- url: http://{defaultHost}/
  variables:
    defaultHost:
      default: localhost:3000
