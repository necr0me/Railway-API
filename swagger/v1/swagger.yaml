---
swagger: '2.0'
info:
  title: Railway-API
  version: v1
  description: Railway-API documentation
paths:
  "/api/v1/carriages/{carriage_id}":
    get:
      summary: Get concrete carriage. By necr0me
      tags:
      - Carriages
      parameters:
      - name: carriage_id
        in: path
        type: integer
        required: true
        description: Id of carriage that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Carriage found
          examples:
            application/json:
              carriage:
                data:
                  id: '4627'
                  type: carriage
                  attributes:
                    name: Apollo
                    capacity: 8
                    carriage_type_id: 5734
                    order_number: '10'
                    available: true
                    type: Bob Katz
                  relationships:
                    train:
                      data: 
                    seats:
                      data: []
                included: []
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '404':
          description: Carriage not found
          examples:
            application/json:
              message: Couldn't find Carriage with 'id'=-1
  "/api/v1/profiles":
    get:
      summary: Retrieves user profiles. By necr0me
      tags:
      - Profiles
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profiles found
          examples:
            application/json:
              profiles:
                data:
                - id: '1848'
                  type: profile
                  attributes:
                    name: John
                    surname: Doe
                    patronymic: Doehovich
                    phone_number: "+375331234567"
                    passport_code: KH1234567
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are foribdden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    post:
      summary: Creates user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Profile successfully created
          examples:
            application/json:
              message: Profile successfully created
              profile:
                data:
                  id: '1850'
                  type: profile
                  attributes:
                    name: John
                    surname: Doe
                    patronymic: Doehovich
                    phone_number: "+375331234567"
                    passport_code: KH1234567
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile create
          examples:
            application/json:
              message: Something went wrong
              errors:
                surname:
                - can't be blank
                - is too short (minimum is 2 characters)
                patronymic:
                - can't be blank
                - is too short (minimum is 5 characters)
                phone_number:
                - can't be blank
                - is too short (minimum is 7 characters)
                passport_code:
                - can't be blank
                - is invalid
                name:
                - is too short (minimum is 2 characters)
  "/api/v1/profiles/{profile_id}":
    put:
      summary: Updates concrete user profile. By necr0me
      tags:
      - Profiles
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                phone_number:
                  type: string
                passport_code:
                  type: string
              required:
              - name
              - surname
              - patronymic
              - phone_number
              - passport_code
              example:
                name: John
                surname: Doe
                patronymic: Doehovich
                phone_number: '375331234567'
                passport_code: KH1234567
          required:
          - profile
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to update
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile found
          examples:
            application/json:
              message: Profile successfully updated
              profile:
                data:
                  id: '1851'
                  type: profile
                  attributes:
                    name: New name
                    surname: Doe
                    patronymic: Doehovich
                    phone_number: "+375331234567"
                    passport_code: KH1234567
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '422':
          description: Error occurred during profile update
          examples:
            application/json:
              message: Something went wrong
              errors:
                name:
                - is too short (minimum is 2 characters)
    delete:
      summary: Deletes concrete user profile. By necr0me
      tags:
      - Profiles
      parameters:
      - name: profile_id
        in: path
        type: string
        required: true
        description: Id of profile that you want to delete
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Profile successfully destroyed
          examples:
            application/json:
              message: Profile successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during profile destroy
          examples:
            application/json:
              message: Something went wrong
              errors: {}
  "/api/v1/stations":
    get:
      summary: Gets all stations. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station
        in: query
        type: string
        required: false
        description: Name of station or first N letters of station name
      responses:
        '200':
          description: Stations found (From query "?station=Mo")
          examples:
            application/json:
              stations:
              - id: 7953
                name: Mogilev
                created_at: '2023-05-08T11:11:25.556Z'
                updated_at: '2023-05-08T11:11:25.556Z'
              - id: 7954
                name: Mosty
                created_at: '2023-05-08T11:11:25.559Z'
                updated_at: '2023-05-08T11:11:25.559Z'
              pages: 1
  "/api/v1/stations/{station_id}":
    get:
      summary: Get concrete station. By necr0me
      tags:
      - Stations
      produces:
      - application/json
      parameters:
      - name: station_id
        in: path
        type: string
        required: true
        description: Id of station
      responses:
        '200':
          description: Station was found
          examples:
            application/json:
              id: 7956
              name: Melbourne
              created_at: '2023-05-08T11:11:25.573Z'
              updated_at: '2023-05-08T11:11:25.573Z'
        '404':
          description: Station not found
          examples:
            application/json:
              message: Couldn't find Station with 'id'=-1
  "/api/v1/tickets":
    get:
      summary: Retrieves user's tickets. By necr0me
      tags:
      - Tickets
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Tickets found
          examples:
            application/json:
              tickets:
              - id: 801
                price: 1.5
                seat_id: 13433
                created_at: '2023-05-08T11:11:25.617Z'
                updated_at: '2023-05-08T11:11:25.617Z'
                profile_id: 1858
                arrival_stop_id: 3661
                departure_stop_id: 3661
              - id: 802
                price: 1.5
                seat_id: 13433
                created_at: '2023-05-08T11:11:25.621Z'
                updated_at: '2023-05-08T11:11:25.621Z'
                profile_id: 1858
                arrival_stop_id: 3661
                departure_stop_id: 3661
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
    post:
      summary: Creates new tickets. By necr0me
      tags:
      - Tickets
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            tickets:
              type: object
              properties:
                departure_station_id:
                  type: integer
                arrival_station_id:
                  type: integer
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      profile_id:
                        type: integer
                      seat_id:
                        type: integer
                      price:
                        type: number
                        format: float
                    required:
                    - profile_id
                    - seat_id
                    - price
              required:
              - departure_station_id
              - arrival_station_id
              - passengers
              example:
                departure_station_id: 1
                arrival_station_id: 2
                passengers:
                - profile_id: 1
                  seat_id: 1
                  price: 10.0
                - profile_id: 2
                  seat_id: 2
                  price: 10.0
          required:
          - tickets
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '201':
          description: Tickets successfully created
          examples:
            application/json:
              message: Tickets successfully created
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during tickets create
          examples:
            application/json:
              message: Something went wrong
              errors:
              - 'Validation failed: Price can''t be blank, Price is not a number'
  "/api/v1/tickets/{ticket_id}":
    delete:
      summary: Deletes concrete ticket. By necr0me
      tags:
      - Tickets
      security:
      - Bearer: {}
      parameters:
      - name: ticket_id
        in: path
        type: integer
        required: true
        description: Id of ticket that you want to destroy
      produces:
      - application/json
      responses:
        '200':
          description: Ticket successfully destroyed
          examples:
            application/json:
              message: Ticket successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Ticket not found
          examples:
            application/json:
              message: Couldn't find Ticket with 'id'=-1
        '422':
          description: Error occurred during ticket destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  api/v1/train_stops:
    get:
      summary: Retrieves all passing trains. By necr0me
      tags:
      - Passing trains
      produces:
      - application/json
      responses:
        '200':
          description: Passing trains found
          examples:
            application/json:
              found_trains:
                data:
                  departure_station:
                    id: ''
                    attributes:
                      name: 
                  arrival_station:
                    id: ''
                    attributes:
                      name: 
                  trains:
                  - id: 3802
                    attributes:
                      destination: 
                      departs_at: '2023-05-08T11:31:26.053Z'
                      arrives_at: '2023-05-08T11:51:26.063Z'
                      travel_time: 1200.010412
  "/api/v1/trains/{train_id}":
    get:
      summary: Show concrete train. By necr0me
      tags:
      - Trains
      parameters:
      - name: train_id
        in: path
        type: integer
        required: true
        description: Id of train that you want to see
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Train found
          examples:
            application/json:
              train:
                data:
                  id: '3803'
                  type: train
                  attributes:
                    destination: No destination
                  relationships:
                    carriages:
                      data:
                      - id: '4644'
                        type: carriage
                      - id: '4645'
                        type: carriage
                      - id: '4646'
                        type: carriage
                    stops:
                      data: []
                    route:
                      data: 
                included:
                - id: '4644'
                  type: carriage
                  attributes:
                    name: Apollo
                    capacity: 8
                    carriage_type_id: 5751
                    order_number: '01'
                    available: false
                    type: Stan Dup
                  relationships:
                    train:
                      data:
                        id: '3803'
                        type: train
                    seats:
                      data:
                      - id: '13448'
                        type: seat
                      - id: '13449'
                        type: seat
                      - id: '13450'
                        type: seat
                      - id: '13451'
                        type: seat
                      - id: '13452'
                        type: seat
                      - id: '13453'
                        type: seat
                      - id: '13454'
                        type: seat
                      - id: '13455'
                        type: seat
                - id: '4645'
                  type: carriage
                  attributes:
                    name: Hermes
                    capacity: 8
                    carriage_type_id: 5752
                    order_number: '02'
                    available: false
                    type: Olive Yew
                  relationships:
                    train:
                      data:
                        id: '3803'
                        type: train
                    seats:
                      data:
                      - id: '13456'
                        type: seat
                      - id: '13457'
                        type: seat
                      - id: '13458'
                        type: seat
                      - id: '13459'
                        type: seat
                      - id: '13460'
                        type: seat
                      - id: '13461'
                        type: seat
                      - id: '13462'
                        type: seat
                      - id: '13463'
                        type: seat
                - id: '4646'
                  type: carriage
                  attributes:
                    name: Hera
                    capacity: 8
                    carriage_type_id: 5753
                    order_number: '03'
                    available: false
                    type: Rusty Pipes
                  relationships:
                    train:
                      data:
                        id: '3803'
                        type: train
                    seats:
                      data:
                      - id: '13464'
                        type: seat
                      - id: '13465'
                        type: seat
                      - id: '13466'
                        type: seat
                      - id: '13467'
                        type: seat
                      - id: '13468'
                        type: seat
                      - id: '13469'
                        type: seat
                      - id: '13470'
                        type: seat
                      - id: '13471'
                        type: seat
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: Train not found
          examples:
            application/json:
              message: Couldn't find Train with 'id'=-1
  "/api/v1/users/":
    get:
      summary: Retrieves concrete user. By necr0me
      tags:
      - Users
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: User found
          examples:
            application/json:
              user:
                data:
                  id: '8270'
                  type: user
                  attributes:
                    email: johndoe@gmail.com
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
  "/api/v1/users/activate":
    post:
      summary: Activates user account. By necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            token:
              type: string
          required:
          - token
          example:
            token: 4900ade391edd9028cc97c91f4ee9a23
      produces:
      - application/json
      responses:
        '200':
          description: Account successfully activated
          examples:
            application/json:
              message: Account johndoe@gmail.com was successfully activated
        '422':
          description: Error occurred during activation
          examples:
            application/json:
              message: Something went wrong during account activation
              errors:
                confirmation_token:
                - Confirmation token is invalid
  "/api/v1/users/reset_email":
    post:
      summary: Generates and sends reset email link on current email of authorized
        user. By necr0me
      tags:
      - Users
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Email reset token was successfully generated
          examples:
            application/json:
              message: Email reset link was sent on johndoe@gmail.com.
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '400':
          description: Error occurred during reset email token generation
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/api/v1/users/update_email":
    patch:
      summary: Generates and sends activation link on new users email. By necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            token:
              type: string
          required:
          - email
          - token
          example:
            email: new_email@gmail.com
            token: 3cc13db26f30e2a3e741c25f2fb7d21f
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Link successfully generated and sent on new email
          examples:
            application/json:
              message: Activation link was sent on new_email@gmail.com.
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '422':
          description: Error occurred during email update
          examples:
            application/json:
              message: Something went wrong
              errors:
                unconfirmed_email:
                - New email same as old one
  "/api/v1/users/reset_password":
    post:
      summary: Generates and sends reset password link on entered by user email. By
        necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
          required:
          - email
          example:
            email: johndoe@gmail.com
      produces:
      - application/json
      responses:
        '200':
          description: Reset password link was successfully generated and sent
          examples:
            application/json:
              message: Password reset link was sent on johndoe@gmail.com
        '400':
          description: Error occurred during reset password link generation
          examples:
            application/json:
              message: Something went wrong
              errors:
                email:
                - User with such email is not registered
  "/api/v1/users/update_password":
    patch:
      summary: Updates user password. By necr0me
      tags:
      - Users
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            password:
              type: string
            token:
              type: string
          required:
          - password
          - token
          example:
            password: '12345678'
            token: 303d1a05af884a4d070061c5250c9560
      produces:
      - application/json
      responses:
        '200':
          description: User password was successfully updated
          examples:
            application/json:
              message: Password was successfully updated
        '422':
          description: Something went wrong during password update
          examples:
            application/json:
              message: Something went wrong
              errors:
                password:
                - is too short (minimum is 7 characters)
  "/users/sign_up":
    post:
      summary: Register new user. By necr0me
      tags:
      - Registrations
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                unconfirmed_email:
                  type: string
                password:
                  type: string
              required:
              - unconfirmed_email
              - password
              example:
                unconfirmed_email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: User successfully created
          examples:
            application/json:
              message: You have successfully registered. Check your email to activate
                your account.
        '422':
          description: Error occurred during user registration
          examples:
            application/json:
              errors:
                unconfirmed_email:
                - Email is blank
  "/users/{user_id}":
    delete:
      summary: Destroy user. By necr0me
      tags:
      - Registrations
      parameters:
      - name: user_id
        in: path
        type: integer
        required: true
        description: Id of user that destroys account (user can destroy only own account
          unless role is admin)
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '204':
          description: User successfully destroyed
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
        '403':
          description: You are forbidden to perform this action
          examples:
            application/json:
              message: You are not allowed to do this action
        '404':
          description: User not found
          examples:
            application/json:
              message: Couldn't find User with 'id'=-1
        '422':
          description: Error occurred during user destroy
          examples:
            application/json:
              message: Something went wrong
              errors:
              - Error message
  "/users/login":
    post:
      summary: Authenticates user. By necr0me
      tags:
      - Authentication
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: mail@gmail.com
                password: p4$$w0rD
          required:
          - user
      produces:
      - application/json
      responses:
        '201':
          description: Authenticated successfully
          examples:
            application/json:
              message: You have successfully logged in
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4MjkwLCJleHAiOjE2ODM1NDYwODYsImlhdCI6MTY4MzU0NDI4Nn0.adeYnGPuHz05RzC1SEDAdRxDg2FPSngOBrF6dHC1pUw
        '400':
          description: Error occurred during authentication
          examples:
            application/json:
              message: Something went wrong
              errors:
                email:
                - Can't find user with such email
  "/users/refresh_tokens":
    get:
      summary: Refreshes access and refresh tokens. By necr0me
      tags:
      - Authentication
      produces:
      - application/json
      responses:
        '200':
          description: Tokens successfully updated
          examples:
            application/json:
              access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4MjkyLCJleHAiOjE2ODM1NDYwODYsImlhdCI6MTY4MzU0NDI4Nn0.Tv0RDNlDS4Czn49VWNk4drm5-6NwaKve2OQLzw9Rs5c
        '401':
          description: Error occurred during tokens update
          examples:
            application/json:
              errors:
              - Nil JSON web token
  "/users/logout":
    delete:
      summary: Logouts user. By necr0me
      tags:
      - Authentication
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
        description: 'Authorization header of user that logout. Header looks like
          this: ''Bearer <access-token>'''
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: Successful logout
          examples:
            application/json:
              message: You have successfully logged out.
        '401':
          description: You are unauthorized
          examples:
            application/json:
              message: You're not logged in
              errors:
              - Nil JSON web token
securityDefinitions:
  Bearer:
    description: Authorization header (JWT-token)
    type: apiKey
    name: Authorization
    in: header
servers:
- url: http://{defaultHost}/
  variables:
    defaultHost:
      default: localhost:3000
